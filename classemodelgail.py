# -*- coding: utf-8 -*-
"""ClasseModelGAIL.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1aUFyPFeLNeii94XYT5MNHsCwgjbeFhhr
"""

'''
El propòsit d'aquest model és fer una predicció del risc relatiu i la projecció de risc en cinc anys en funció de certes variables.
Les dades en les que aquest programari està basat en les usades per a programar el model GAIL, havent tret la informació de la següent pàgina web:
https://www.mdapp.co/gail-model-for-breast-cancer-risk-calculator-576/
'''

#Crea la classe del mòdel
class modelRiscCanMama:
  def __init__(self, edat, etnicitat, menarquia, primPart, famCanMama, biopMama, hipAtip, data):
    self.edat = edat
    self.etnicitat = etnicitat
    self.menarquia = menarquia
    self.primPart = primPart
    self.famCanMama = famCanMama
    self.biopMama = biopMama
    self.hipAtip = hipAtip
    self.data = data

  #Creació de variables usades per fer els càlculs.
  def obEdMen(self):
    if self.menarquia >= 14:
      return 1
    if self.menarquia == 12 or self.menarquia == 13:
      return 1.1
    if self.menarquia < 12:
      return 1.21

  def obNumBiops(self):
    if self.edat < 50:
      if self.biopMama == 0:
        return 1
      if self.biopMama == 1:
        return 1.7
      if self.biopMama >= 2:
        return 2.88
    if self.edat >= 50:
      if self.biopMama == 0:
        return 1
      if self.biopMama == 1:
        return 1.27
      if self.biopMama >= 2:
        return 1.62

  def obHipAtip(self):
    if self.biopMama == 0:
      return 1
    if self.hipAtip == 0:
      return 0.93
    if self.hipAtip == 1:
      return 1.82

  def obEdEtComp(self):
    if self.edat >= 20 and self.edat <= 24:
      if self.etnicitat == "n":
        return 0.014
      if self.etnicitat == "b":
        return 0.012

    if self.edat >= 25 and self.edat <= 29:
      if self.etnicitat == "n":
        return 0.05
      if self.etnicitat == "b":
        return 0.048

    if self.edat >= 30 and self.edat <= 34:
      if self.etnicitat == "n":
        return 0.12
      if self.etnicitat == "b":
        return 0.134

    if self.edat >= 35 and self.edat <= 39:
      if self.etnicitat == "n":
        return 0.224
      if self.etnicitat == "b":
        return 0.278

    if self.edat >= 40 and self.edat <= 44:
      if self.etnicitat == "n":
        return 0.31
      if self.etnicitat == "b":
        return 0.45

    if self.edat >= 45 and self.edat <= 49:
      if self.etnicitat == "n":
        return 0.355
      if self.etnicitat == "b":
        return 0.584

    if self.edat >= 50 and self.edat <= 54:
      if self.etnicitat == "n":
        return 0.416
      if self.etnicitat == "b":
        return 0.703

    if self.edat >= 55 and self.edat <= 59:
      if self.etnicitat == "n":
        return 0.511
      if self.etnicitat == "b":
        return 0.859

    if self.edat >= 60 and self.edat <= 64:
      if self.etnicitat == "n":
        return 0.562
      if self.etnicitat == "b":
        return 1.018

    if self.edat >= 65 and self.edat <= 69:
      if self.etnicitat == "n":
        return 0.586
      if self.etnicitat == "b":
        return 1.116

    if self.edat >= 70 and self.edat <= 74:
      if self.etnicitat == "n":
        return 0.646
      if self.etnicitat == "b":
        return 1.157

    if self.edat >= 75 and self.edat <= 79:
      if self.etnicitat == "n":
        return 0.713
      if self.etnicitat == "b":
        return 1.14

    if self.edat >= 80 and self.edat <= 84:
      if self.etnicitat == "n":
        return 0.659
      if self.etnicitat == "b":
        return 1.006

  def obPrimPartFamCanMama(self):
    if self.famCanMama == 0:
      if self.primPart == 0:
        return 1.55
      if self.primPart < 20:
        return 1
      if self.primPart >= 20 and self.primPart <= 24:
        return 1.24
      if self.primPart >= 25 and self.primPart <= 29:
        return 1.55
      if self.primPart >= 30:
        return 1.93

    if self.famCanMama == 1:
      if self.primPart == 0:
        return 2.76
      if self.primPart < 20:
        return 2.61
      if self.primPart >= 20 and self.primPart <= 24:
        return 2.68
      if self.primPart >= 25 and self.primPart <= 29:
        return 2.76
      if self.primPart >= 30:
        return 2.83

    if self.famCanMama == 2:
      if self.primPart == 0:
        return 4.91
      if self.primPart < 20:
        return 6.8
      if self.primPart >= 20 and self.primPart <= 24:
        return 5.78
      if self.primPart >= 25 and self.primPart <= 29:
        return 4.91
      if self.primPart >= 30:
        return 4.17
  #Es defineixen les funcions que retornen la probabilitat
  #Retorna el risc relatiu
  def obRiscRel(self):
    return self.obEdMen() * self.obNumBiops() * self.obPrimPartFamCanMama() * self.obHipAtip()

  #Retorna el risc dintre d'un periode de cinc anys
  def obCincAnysRisc(self):
    return self.obRiscRel() * self.obEdEtComp()